# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.user_pb2 as user__pb2


class UserServiceStub(object):
    """https://stackoverflow.com/questions/61666805/correct-format-of-protoc-go-package
    option go_package = "github.com/***/protos/user";

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.register = channel.unary_unary(
                '/user.UserService/register',
                request_serializer=user__pb2.RegisterRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                )
        self.login = channel.unary_unary(
                '/user.UserService/login',
                request_serializer=user__pb2.LoginRequest.SerializeToString,
                response_deserializer=user__pb2.UserResponse.FromString,
                )
        self.verify = channel.unary_unary(
                '/user.UserService/verify',
                request_serializer=user__pb2.VerifyRequest.SerializeToString,
                response_deserializer=user__pb2.VerifyResponse.FromString,
                )
        self.getUser = channel.unary_unary(
                '/user.UserService/getUser',
                request_serializer=user__pb2.GetUserRequest.SerializeToString,
                response_deserializer=user__pb2.VerifyResponse.FromString,
                )
        self.changeUserEmail = channel.unary_unary(
                '/user.UserService/changeUserEmail',
                request_serializer=user__pb2.ChangeUserEmailRequest.SerializeToString,
                response_deserializer=user__pb2.VerifyResponse.FromString,
                )


class UserServiceServicer(object):
    """https://stackoverflow.com/questions/61666805/correct-format-of-protoc-go-package
    option go_package = "github.com/***/protos/user";

    """

    def register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeUserEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'register': grpc.unary_unary_rpc_method_handler(
                    servicer.register,
                    request_deserializer=user__pb2.RegisterRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=user__pb2.LoginRequest.FromString,
                    response_serializer=user__pb2.UserResponse.SerializeToString,
            ),
            'verify': grpc.unary_unary_rpc_method_handler(
                    servicer.verify,
                    request_deserializer=user__pb2.VerifyRequest.FromString,
                    response_serializer=user__pb2.VerifyResponse.SerializeToString,
            ),
            'getUser': grpc.unary_unary_rpc_method_handler(
                    servicer.getUser,
                    request_deserializer=user__pb2.GetUserRequest.FromString,
                    response_serializer=user__pb2.VerifyResponse.SerializeToString,
            ),
            'changeUserEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.changeUserEmail,
                    request_deserializer=user__pb2.ChangeUserEmailRequest.FromString,
                    response_serializer=user__pb2.VerifyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """https://stackoverflow.com/questions/61666805/correct-format-of-protoc-go-package
    option go_package = "github.com/***/protos/user";

    """

    @staticmethod
    def register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/register',
            user__pb2.RegisterRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/login',
            user__pb2.LoginRequest.SerializeToString,
            user__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/verify',
            user__pb2.VerifyRequest.SerializeToString,
            user__pb2.VerifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/getUser',
            user__pb2.GetUserRequest.SerializeToString,
            user__pb2.VerifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def changeUserEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.UserService/changeUserEmail',
            user__pb2.ChangeUserEmailRequest.SerializeToString,
            user__pb2.VerifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
